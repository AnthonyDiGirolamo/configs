#!/usr/bin/zsh

# Sets the screen window title with the name of the command you are running
preexec () {
	echo -ne "\ek${1%% *}\e\\"
}

# Set color variables with helpful names
autoload colors zsh/terminfo
if [[ "$terminfo[colors]" -ge 8 ]]; then
	colors
fi
for color in RED GREEN YELLOW BLUE MAGENTA CYAN WHITE; do
	eval PR_$color='%{$terminfo[bold]$fg[${(L)color}]%}'
	eval PR_BOLD_$color='%{$fg[${(L)color}]%}'
	(( count = $count + 1 ))
done
PR_NO_COLOR="%{$terminfo[sgr0]%}"

# Prompt
# ======

# Standard Bash-Like
# PS1="[$PR_BLUE%n$PR_GREEN@%m$PR_NO_COLOR:$PR_RED%2c$PR_NO_COLOR]$PR_WHITE%(!.#.$)$PR_NO_COLOR "

# Super Minimalistic
PS1="$PR_GREEN%(!.#.$)$PR_NO_COLOR "

# Right Justified Prompt
# ======================

# Date Time
# RPS1="$PR_BOLD_YELLOW(%D{%m-%d %H:%M})$PR_NO_COLOR"

# Current Directory

# The following 9 lines of code comes directly from Phil!'s ZSH prompt
# http://aperiodic.net/phil/prompt/
local TERMWIDTH
(( TERMWIDTH = ${COLUMNS} - 1 ))

local PROMPTSIZE=${#${(%):--- %D{%R.%S %a %b %d %Y}\! }}
local PWDSIZE=${#${(%):-%~}}

if [[ "$PROMPTSIZE + $PWDSIZE" -gt $TERMWIDTH ]]; then
  (( PR_PWDLEN = $TERMWIDTH - $PROMPTSIZE ))
fi

RPS1="$PR_CYAN%${PR_PWDLEN}<...<%~%<<$PR_NO_COLOR"

# Git-Aware Command prompt:
#source ~/.zsh_prompt

# Prompt Module/Plugin/Whatever
#autoload -U promptinit
# Run prompt -h for help
#promptinit
#setopt promptsubst
#prompt wunjo


# MacOS Specific Settings
uname -a | grep -qs Darwin
if [ $? -eq 0 ]; then
	export PATH=/opt/local/bin:$PATH

  # Use sudo port install coreutils +with_default_names
  # to get the following to work in OSX
  #eval "`/opt/local/bin/dircolors -b`"
  alias ls='ls --color=auto'
	alias gvim=mvim
	alias vim='TERM=xterm+256color /Applications/MacVim.app/Contents/MacOS/Vim'
else
	# Linux
  eval "`dircolors -b`"
  alias ls='ls --color=auto'
	alias vim='TERM=xterm+256color vim'

	alias rm='mv --verbose -i --target-directory ~/.Trash/'
	alias empty='/bin/rm -rvf ~/.Trash/* ; /bin/rm -rvf ~/.Trash/.*'
fi

# Aliases
alias randmac="head /dev/urandom | openssl md5 | sed 's/\(..\)/\1:/g' | cut -c1-17"

alias xdef='xrdb -load ~/.Xdefaults'

alias lltr='ll -tr'
alias lla='ls -lhA'
alias ll='ls -lh'
alias la='ls -A'
alias l='ls -CF'

alias mutt='TERM=xterm-256color mutt'

alias gl='git log --pretty=oneline'
alias gits='git status'

alias p='pushd'
alias o='popd'

alias h='history 1'

alias du='du -hsc'
alias df='df -hTP'

alias t='vim ~/Notes/GTD.mkd'
alias tg='gvim ~/Notes/GTD.mkd'
alias today='grep `date +%m/%d` ~/Notes/GTD.mkd'

### Variables
export EDITOR=vim
export PATH=$HOME/Preferences/bin:$PATH

#export GDBASE_PREFIX=/home/adigiro/apps/gdbase
#export PATH=$HOME/apps/gdbase/bin:$PATH

### MVAPICH
#export PATH=$HOME/apps/mvapich/bin:/home/adigiro/apps/valgrind-mvapich/bin:$PATH
#export LD_LIBRARY_PATH=$HOME/mvapich/lib:$LD_LIBRARY_PATH

### OPENMPI 1.2.6
#export PATH=$HOME/apps/openmpi126/bin:/home/adigiro/apps/valgrind-openmpi/bin:$PATH
#export LD_LIBRARY_PATH=$HOME/apps/openmpi126/lib/openmpi:$LD_LIBRARY_PATH
#export LD_LIBRARY_PATH=$HOME/apps/openmpi126/lib:$LD_LIBRARY_PATH

# OPENMPI 1.3.3
#export PATH=$HOME/apps/openmpi133/bin:$PATH
#export LD_LIBRARY_PATH=$HOME/apps/openmpi133/lib/openmpi:$LD_LIBRARY_PATH
#export LD_LIBRARY_PATH=$HOME/apps/openmpi133/lib:$LD_LIBRARY_PATH

# Auth your sshkey with another server
function authme {
    ssh $@ 'cat >>.ssh/authorized_keys' <~/.ssh/id_rsa.pub
}

function setupenv {
	rsync -avLK --delete --exclude mthesaur-vim.txt .vim .vimrc .zsh .zsh_prompt .zshenv .zshrc .screenrc $@:~/
}

# Emacs Mode
bindkey -e
# VI Mode
# bindkey -v

setopt MENUCOMPLETE

setopt INC_APPEND_HISTORY APPEND_HISTORY SHARE_HISTORY
setopt HIST_IGNORE_DUPS HIST_IGNORE_ALL_DUPS
HISTSIZE=10000
SAVEHIST=10000
HISTFILE=~/.zhistory

##setopt NOHUP
##setopt NOTIFY
##setopt NO_FLOW_CONTROL
#setopt APPEND_HISTORY
## setopt AUTO_LIST		# these two should be turned off
## setopt AUTO_REMOVE_SLASH
## setopt AUTO_RESUME	# tries to resume command of same name
#unsetopt BG_NICE		# do NOT nice bg commands
#setopt CORRECT			# command CORRECTION
#setopt EXTENDED_HISTORY	# puts timestamps in the history
## setopt HASH_CMDS		# turns on hashing
#setopt ALL_EXPORT
#
## Set/unset shell options
#setopt   notify globdots correct pushdtohome cdablevars autolist
#setopt   correctall autocd recexact longlistjobs
#setopt   autoresume histignoredups pushdsilent
#setopt   autopushd pushdminus extendedglob rcquotes mailwarning
#unsetopt bgnice autoparamslash
#
## Autoload zsh modules when they are referenced
#zmodload -a zsh/stat stat
#zmodload -a zsh/zpty zpty
#zmodload -a zsh/zprof zprof
#zmodload -ap zsh/mapfile mapfile
#
#HOSTNAME="`hostname`"
#PAGER='less'
#EDITOR='vim'

#unsetopt ALL_EXPORT

# Auto Complete Plugin
autoload -U compinit
compinit

bindkey '^[[1;5D' backward-word
bindkey '^[[1;5C' forward-word

bindkey '^?' backward-delete-char
bindkey '^H' backward-delete-char

bindkey '^r' history-incremental-search-backward

# bindkey ' ' magic-space    # also do history expansion on space
bindkey '^I' complete-word # complete on tab, leave expansion to _expand

bindkey '^K' push-line # push current command into a buffer, allows you to do another command then returns to previous command

#autoload zkbd
#[[ -n ${key[Backspace]} ]] && bindkey "${key[Backspace]}" backward-delete-char
#[[ -n ${key[Insert]} ]] && bindkey "${key[Insert]}" overwrite-mode
#[[ -n ${key[Home]} ]] && bindkey "${key[Home]}" beginning-of-line
#[[ -n ${key[PageUp]} ]] && bindkey "${key[PageUp]}" up-line-or-history
#[[ -n ${key[Delete]} ]] && bindkey "${key[Delete]}" delete-char
#[[ -n ${key[End]} ]] && bindkey "${key[End]}" end-of-line
#[[ -n ${key[PageDown]} ]] && bindkey "${key[PageDown]}" down-line-or-history
#[[ -n ${key[Up]} ]] && bindkey "${key[Up]}" up-line-or-search
#[[ -n ${key[Left]} ]] && bindkey "${key[Left]}" backward-char
#[[ -n ${key[Down]} ]] && bindkey "${key[Down]}" down-line-or-search
#[[ -n ${key[Right]} ]] && bindkey "${key[Right]}" forward-char

zstyle ':completion::complete:*' use-cache on
zstyle ':completion::complete:*' cache-path ~/.zsh/cache/$HOST

# Ubuntu Linux LS_COLORS
LINUX_LS_COLORS='no=00:fi=00:di=01;34:ln=01;36:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:su=37;41:sg=30;43:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.svgz=01;31:*.arj=01;31:*.taz=01;31:*.lzh=01;31:*.lzma=01;31:*.zip=01;31:*.z=01;31:*.Z=01;31:*.dz=01;31:*.gz=01;31:*.bz2=01;31:*.bz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.rar=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.jpg=01;35:*.jpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.aac=00;36:*.au=00;36:*.flac=00;36:*.mid=00;36:*.midi=00;36:*.mka=00;36:*.mp3=00;36:*.mpc=00;36:*.ogg=00;36:*.ra=00;36:*.wav=00;36:';

zstyle ':completion:*' list-colors ${(s.:.)LINUX_LS_COLORS}
zstyle ':completion:*' list-prompt '%SAt %p: Hit TAB for more, or the character to insert%s'
zstyle ':completion:*' menu select=1 _complete _ignored _approximate
zstyle -e ':completion:*:approximate:*' max-errors \
    'reply=( $(( ($#PREFIX+$#SUFFIX)/2 )) numeric )'
zstyle ':completion:*' select-prompt '%SScrolling active: current selection at %p%s'

# Completion Styles
# list of completers to use
zstyle ':completion:*::::' completer _expand _complete _ignored _approximate
# allow one error for every three characters typed in approximate completer
zstyle -e ':completion:*:approximate:*' max-errors \
    'reply=( $(( ($#PREFIX+$#SUFFIX)/2 )) numeric )'
# insert all expansions for expand completer
zstyle ':completion:*:expand:*' tag-order all-expansions
# formatting and messages
zstyle ':completion:*' verbose yes
zstyle ':completion:*:descriptions' format '%B%d%b'
zstyle ':completion:*:messages' format '%d'
zstyle ':completion:*:warnings' format 'No matches for: %d'
zstyle ':completion:*:corrections' format '%B%d (errors: %e)%b'
zstyle ':completion:*' group-name ''

# match uppercase from lowercase
zstyle ':completion:*' matcher-list 'm:{a-z}={A-Z}'
# offer indexes before parameters in subscripts
zstyle ':completion:*:*:-subscript-:*' tag-order indexes parameters

# command for process lists, the local web server details and host completion
# on processes completion complete all user processes
# zstyle ':completion:*:processes' command 'ps -au$USER'


## add colors to processes for kill completion
zstyle ':completion:*:*:kill:*:processes' list-colors '=(#b) #([0-9]#)*=0=01;31'

#zstyle ':completion:*:processes' command 'ps ax -o pid,s,nice,stime,args | sed "/ps/d"'
zstyle ':completion:*:*:kill:*:processes' command 'ps --forest -A -o pid,user,cmd'
zstyle ':completion:*:processes-names' command 'ps axho command'
#zstyle ':completion:*:urls' local 'www' '/var/www/htdocs' 'public_html'
#

#NEW completion:
# 1. All /etc/hosts hostnames are in autocomplete
# 2. If you have a comment in /etc/hosts like #%foobar.domain,
#    then foobar.domain will show up in autocomplete!
# zstyle ':completion:*' hosts $(awk '/^[^#]/ {print $2 $3" "$4" "$5}' /etc/hosts | grep -v ip6- && grep "^#%" /etc/hosts | awk -F% '{print $2}')
# Filename suffixes to ignore during completion (except after rm command)
# zstyle ':completion:*:*:(^rm):*:*files' ignored-patterns '*?.o' '*?.c~' '*?.old' '*?.pro'
# the same for old style completion
# fignore=(.o .c~ .old .pro)


# ignore completion functions (until the _ignored completer)
#zstyle ':completion:*:functions' ignored-patterns '_*'
#zstyle ':completion:*:*:*:users' ignored-patterns \
#        adm apache bin daemon games gdm halt ident junkbust lp mail mailnull \
#        named news nfsnobody nobody nscd ntp operator pcap postgres radvd \
#        rpc rpcuser rpm shutdown squid sshd sync uucp vcsa xfs avahi-autoipd\
#        avahi backup messagebus beagleindex debian-tor dhcp dnsmasq fetchmail\
#        firebird gnats haldaemon hplip irc klog list man cupsys postfix\
#        proxy syslog www-data mldonkey sys snort
#
## SSH Completion
#zstyle ':completion:*:scp:*' tag-order \
#   files users 'hosts:-host hosts:-domain:domain hosts:-ipaddr"IP\ Address *'
#zstyle ':completion:*:scp:*' group-order \
#   files all-files users hosts-domain hosts-host hosts-ipaddr
#zstyle ':completion:*:ssh:*' tag-order \
#   users 'hosts:-host hosts:-domain:domain hosts:-ipaddr"IP\ Address *'
#zstyle ':completion:*:ssh:*' group-order \
#   hosts-domain hosts-host users hosts-ipaddr
zstyle '*' single-ignored show

export SSH_ENV=~/.ssh/start_agent
function start_agent {
  echo "Initializing new SSH agent..."
  /usr/bin/ssh-agent | sed 's/^echo/#echo/' > "${SSH_ENV}"
  echo succeeded
  chmod 600 "${SSH_ENV}"
  . "${SSH_ENV}" > /dev/null
  /usr/bin/ssh-add;
}

# Source SSH settings, if applicable
if [ -f "${SSH_ENV}" ]; then
  . "${SSH_ENV}" > /dev/null
  #ps ${SSH_AGENT_PID} doesn't work under cywgin
  ps -eA | grep ${SSH_AGENT_PID} | grep ssh-agent$ > /dev/null || {
    start_agent;
  }
else
  start_agent;
fi

# RVM Source
[[ -s $HOME/.rvm/scripts/rvm ]] && source $HOME/.rvm/scripts/rvm
