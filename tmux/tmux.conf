#set-option -g bell-action any
#set-option -g visual-activity on
#set-window-option -g monitor-activity on

set-option -g history-limit 10000

unbind-key C-b
set -g prefix C-a
# set -g prefix2 C-b
bind-key -n C-q send-prefix # nested tmux
bind-key a send-prefix
bind-key C-a last-window
bind-key e previous-window
unbind %
bind-key | split-window -h
bind-key v split-window -h
bind-key - copy-mode
bind-key s split-window -v
bind-key g choose-tree
bind-key C-r rotate-window
bind-key C-l clear-history
bind-key C-w select-pane -t :.+

bind-key -n C-Tab next-window
bind-key -n C-S-Tab previous-window

# Use vim keybindings in copy mode
set -g mode-keys vi

# Setup 'v' to begin selection as in Vim
bind-key -T copy-mode-vi v send-keys -X begin-selection
unbind -T copy-mode-vi Enter

# Mac Clipboard Sync - requires 'brew install reattach-to-user-namespace'
# bind-key -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "reattach-to-user-namespace pbcopy"
# bind-key -T copy-mode-vi Enter send-keys -X copy-pipe-and-cancel "reattach-to-user-namespace pbcopy"
# bind \ run "reattach-to-user-namespace pbpaste | tmux load-buffer - && tmux paste-buffer"

# colemak vi keys
bind-key -T copy-mode-vi n send-keys -X cursor-down
bind-key -T copy-mode-vi e send-keys -X cursor-up
bind-key -T copy-mode-vi k send-keys -X search-again
bind-key -T copy-mode-vi K send-keys -X search-reverse

# # Linux Clipboard Sync
# # using xsel
# bind-key -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "xsel -i -b"
# bind-key -T copy-mode-vi Enter send-keys -X copy-pipe-and-cancel "xsel -i -b"
# bind \ run "xsel -o -b | tmux load-buffer - && tmux paste-buffer"

# using xclip
bind-key -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "xclip -selection clipboard -in"
bind-key -T copy-mode-vi Enter send-keys -X copy-pipe-and-cancel "xclip -selection clipboard -in"
bind \ run "xclip -selection clipboard -out | tmux load-buffer - && tmux paste-buffer"

bind-key -T copy-mode-vi o send-keys -X copy-pipe-and-cancel "xargs google-chrome"

# # Smart pane switching with awareness of vim splits
is_vim='echo "#{pane_current_command}" | grep -iqE "(^|\/)g?(view|.*emacs.*|n?vim?)(diff)?$"'
bind -n M-h if-shell "$is_vim" "send-keys M-h" "select-pane -L"
bind -n M-n if-shell "$is_vim" "send-keys M-n" "select-pane -D"
bind -n M-e if-shell "$is_vim" "send-keys M-e" "select-pane -U"
bind -n M-l if-shell "$is_vim" "send-keys M-l" "select-pane -R"
bind -n M-\ if-shell "$is_vim" "send-keys M-\\" "select-pane -l"

set -g mouse on

# Deprecated options

# set -g mode-mouse on
# set -g mouse-resize-pane on
# set -g mouse-select-pane on
# set -g mouse-select-window on
# set -g mouse-utf8 on

# set-option -g status-utf8 on
# set-option -g utf8 on

set -g base-index 1

#set-window-option -g alternate-screen on
set -g default-terminal "screen-256color"

# Allow pasteboard access in OSX
if-shell 'test "$(uname -s)" = Darwin' 'set-option -g default-command "exec reattach-to-user-namespace -l zsh"'

set -g default-shell "/usr/local/bin/fish"

set-option -g status on
set-option -g status-interval 2
set-option -g status-justify "left"
set-option -g status-left-length 60
set-option -g status-right-length 90
set-option -g visual-activity on
# set-option -g visual-content on

# Custom colors!
source-file "$HOME/Preferences/tmux/colors-purple.conf"

set -g escape-time 0
